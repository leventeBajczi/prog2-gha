@startuml name
class ComplexInstruktion {
	+ComplexInstruktion(std:: string)
	+ComplexInstruktion(std:: string, SimpleInstruktion &)
	+print() : std::string
	-instructions : std::vector<SimpleInstruktion>
	+add(SimpleInstruktion &) : void
	+run(VirtualMachine &) : void
}

abstract class Datei {
	+Datei(std:: string)
	+operator<<(std::ostream &, Datei &) : std : : ostream&
	+getLang() : std::string
	#language : std::string
	+{abstract} print() : std::string
}

abstract class Instruktion {
	+Instruktion(std::string str)
	+{abstract} print() : std::string
	+{abstract} run(VirtualMachine &) : void
}

class JSON {
	+JSON(std::string content)
	+string()
	+operator<<(std::ostream &, JSON &) : std : : ostream&
	#content : std::string
}

class JSONArray {
	+JSONArray(std:: string)
	+operator[](int n) : JSONObject
	+set(int, T) : void
}

class JSONObject {
	+JSONObject(std:: string)
	+operatorint()
	+toArr() : JSONArray&
	+get(std:: string) : JSONObject
	+operator[](int) : JSONObject
	+put(std:: string, T) : void
}

class Memory {
	+Memory(unsigned int)
	+Memory(const Memory &)
	+~Memory()
	+shiftLeft(unsigned int, uint8_t, uint8_t, uint8_t &, uint8_t) : bool
	+shiftRight(unsigned int, uint8_t, uint8_t, uint8_t &, uint8_t) : bool
	+write(unsigned int, uint8_t) : bool
	-size : const unsigned int
	+read(unsigned int) : uint8_t&
	-speicherBereich : uint8_t*
}

class SimpleInstruktion {
	+SimpleInstruktion(std:: string, std:: string, void*, std:: string, std:: string)
	-param1 : std::string
	-param2 : std::string
	+print() : std::string
	-representation : std::string
	+run(VirtualMachine &) : void
	-function : void*
}

class Sprache {
	+Sprache(std:: string, std:: string)
	+{static} languageElements : static std::vector<std::string>
	+instructions : std::map<std::string, std::string>
	+print() : std::string
	+{static} printEmpty() : std::string
}

class VirtualMachine {
	+VirtualMachine(Sprache, unsigned int, unsigned int)
	-generalRegisterArray : Memory
	-memory : Memory
	-specialRegisterArray : Memory
	-language : Sprache
	+addSubroutine(std:: string) : bool
	+runInstruction(std:: string) : bool
	-labels : std::map<std::string, ComplexInstruktion*>
	-subroutines : std::map<std::string, ComplexInstruktion*>
	-functions : std::map<std::string, void*>
	-stack : std::stack<uint8_t>
	+getValue(std:: string) : uint8_t
	+popValue() : uint8_t
	+getReference(std:: string) : uint8_t&
	+pushValue(uint8_t) : void
	+reRunAll() : void
	+runSubroutine(std:: string) : void
	-getPtr(std:: string) : void*
}

Datei <|-- Instruktion
Datei <|-- Sprache
Instruktion <|-- ComplexInstruktion
Instruktion <|-- SimpleInstruktion
JSON <|-- JSONArray
JSON <|-- JSONObject
JSONObject <|-- Sprache
ComplexInstruktion o-- SimpleInstruktion
VirtualMachine "2" o-- ComplexInstruktion
VirtualMachine "3" o-- Memory
VirtualMachine o-- Sprache

@enduml
